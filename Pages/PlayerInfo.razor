@page "/PlayerInfo/{username}"
@using SitServerController.Models
@using SitServerController.Controllers
@using SitServerController.Common
@using SitServerController.Pages.Components
@using SitServerController.Pages.Components.Traders

<MudGrid Class="d-flex pa-4">
    <MudItem md="12" xs="12">
    <MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6"  Style="background: #121212; color: #968867" Color="Color.Secondary">
        <MudTabPanel Text="Overall"  Style="background: #121212; ">
            <MudGrid>
                
                <ProfileInformationOverallHeader _player="_player" _fullProfile="_fullProfile"></ProfileInformationOverallHeader>
                
                <MudItem md="6" xs="6" Style="padding-top: 2em">
                    <ProfileInformationCardBase _player="_player" _fullProfile="@_fullProfile" _cardTitle="Common Stats" _icon="@Icons.Material.Filled.Commit">
                        <ProfileInformationCommonStats _player="_player" _fullProfile="_fullProfile"></ProfileInformationCommonStats>
                    </ProfileInformationCardBase>
                </MudItem>


                <MudItem md="6" xs="6" Style="padding-top: 2em">
                    <ProfileInformationCardBase _player="_player" _fullProfile="@_fullProfile" _cardTitle="Health" _icon="@Icons.Material.Filled.Healing">
                        <ProfileInformationHealthStats _player="_player" _fullProfile="_fullProfile"></ProfileInformationHealthStats>
                    </ProfileInformationCardBase>
                </MudItem>

                <MudItem md="6" xs="6" Style="padding-top: 2em">
                    <ProfileInformationCardBase _player="_player" _fullProfile="@_fullProfile" _cardTitle="Looting" _icon="@Icons.Material.Filled.FrontHand">
                        <ProfileInformationLootingStats _player="_player" _fullProfile="_fullProfile"></ProfileInformationLootingStats>
                    </ProfileInformationCardBase>
                </MudItem>


                <MudItem md="6" xs="6" Style="padding-top: 2em">
                    <ProfileInformationCardBase _player="_player" _fullProfile="@_fullProfile" _cardTitle="Combat" _icon="@Icons.Material.Filled.Backpack">
                        <ProfileInformationCombatStats _player="_player" _fullProfile="_fullProfile"></ProfileInformationCombatStats>
                    </ProfileInformationCardBase>
                </MudItem>


            </MudGrid>
        </MudTabPanel>
        <MudTabPanel Text="Gear"  Style="background: #121212;">

        </MudTabPanel>
        <MudTabPanel Text="Health" Style="background: #121212;">
            <MudText>Content Three</MudText>
        </MudTabPanel>
        <MudTabPanel Text="Skills" Style="background: #121212;">
            <MudText>Content Disabled</MudText>
        </MudTabPanel>
        <MudTabPanel Text="Traders" Style="background: #121212;">
            <PlayerInformationTraders _player="_player" _fullProfile="_fullProfile">
                
            </PlayerInformationTraders>
        </MudTabPanel>
    </MudTabs>
    </MudItem>
</MudGrid>


@code {
    [Parameter] public string username { get; set; }
    private PlayerInformation[] players;
    private PlayerFullProfile _fullProfile { get; set; }
    private IEnumerable<PlayerInformation> PlayerList = new List<PlayerInformation>();
    private PlayerInformation _player;
    
    async Task GetProfiles()
    {
        players = AccountManager.GetExistingProfiles();
        PlayerList = players.ToList();
    }
    
    protected override async Task OnInitializedAsync()
    {
        GetProfiles();
        foreach (var player in PlayerList)
        {
            if (player.Username == username)
            {
                _player = player;
                GetUserJsonProfile(player);
            }
        }
    }

    void GetUserJsonProfile(PlayerInformation player)
    {
        string user = player.Username;
        string path = Directory.GetCurrentDirectory() + "\\GameServer\\user\\profiles";
        Console.WriteLine(path);

        foreach (var file in Directory.GetFiles(path))
        {
            PlayerFullProfile profile = Json.Load<PlayerFullProfile>(file);
            if (profile.info.username == username)
            {
                _fullProfile = profile;
            }
        }
    }
}